https://spatie.be/docs/laravel-multitenancy/v4/introduction


composer create-project laravel/laravel multi-tenant
composer require laravel/breeze --dev
composer require "spatie/laravel-multitenancy"
php artisan breeze:install vue
npm install
npm install vue@3 @inertiajs/vue3

cache törlés
php artisan tenants:artisan "cache:clear"

//php artisan cache:clear       # Alkalmazás cache
php artisan config:clear      # Konfigurációs cache
php artisan config:cache
php artisan route:clear       # Útvonal cache
php artisan view:clear        # Nézet cache
php artisan event:clear       # Esemény cache


php artisan vendor:publish --provider="Spatie\Multitenancy\MultitenancyServiceProvider" --tag="multitenancy-config"
php artisan vendor:publish --provider="Spatie\Multitenancy\MultitenancyServiceProvider" --tag="multitenancy-migrations"

    // in `bootstrap/app.php`

    return Application::configure(basePath: dirname(__DIR__))
        // ...
        ->withMiddleware(function (Middleware $middleware) {
            $middleware
                ->web(append: [
                    \Spatie\Multitenancy\Http\Middleware\NeedsTenant::class,
                    \Spatie\Multitenancy\Http\Middleware\EnsureValidTenantSession::class,
                ]);
        });


MUGRÁCIÓ
A TENANT SPECIFIKUS ADATBÁZISOKAT LÉTRE KELL HOZNI!!!!!
CREATE DATABASE company_01
	CHARACTER SET utf8mb3
	COLLATE utf8mb3_unicode_ci;

CREATE DATABASE company_02
	CHARACTER SET utf8mb3
	COLLATE utf8mb3_unicode_ci;


php artisan vendor:publish --provider="Spatie\Multitenancy\MultitenancyServiceProvider" --tag="multitenancy-migrations"

php artisan migrate --path=database/migrations/landlord --database=landlord --seed
php artisan migrate:fresh --path=database/migrations/landlord --database=landlord --seed

php artisan tenants:artisan "migrate --path=database/migrations/tenant --database=tenant --seed"

php artisan tenants:artisan "migrate:fresh --path=database/migrations/tenant --database=tenant --seed"

// ============================================
// CACHE ELKÜLÖNÍTÉS
// ============================================

php artisan config:clear
php artisan cache:clear
php artisan route:clear

php artisan config:clear
php artisan config:cache
php artisan tenants:artisan "cache:clear"
ipconfig -flushdns

1. Konfiguráció frissítése:
    config/multitenancy.php:
        'switch_tenant_tasks' => [
            Spatie\Multitenancy\Tasks\PrefixCacheTask::class,
            // egyéb feladatok...
        ],

2. Cache használata:
    A beállítás után a cache használata automatikusan bérlőspecifikus lesz. Például:
        cache()->put('kulcs', 'érték');
        $érték = cache()->get('kulcs');
    A fenti példában a 'kulcs' csak az aktuális bérlő cache-ében lesz elérhető.
    Megjegyzés: A PrefixCacheTask csak memóriaalapú cache tárolók esetén működik, mint például APC vagy Redis.

// ============================================
// FÁJLRENDSZER ELKÜLÖNÍTÉS
// ============================================
    $subdomain = explode('.', request()->getHost())[0];
    Storage::put("uploads/{$subdomain}/filename.txt", $content);
    Storage::put("bills/{$subdomain}/invoice.pdf", $pdfContent);

// ============================================
// JOGOSULTSÁGKEZELÉS
// ============================================
composer require spatie/laravel-permission
php artisan vendor:publish --provider="Spatie\Permission\PermissionServiceProvider"
php artisan tenants:artisan "migrate --path=database/migrations/tenant --database=tenant"
